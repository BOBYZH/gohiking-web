[{"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\index.js":"1","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\App.js":"2","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\index.js":"3","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\config.js":"4","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\routes.js":"5","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\menuItems.js":"6","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\themes.js":"7","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\LandingPage\\LandingPage.js":"8","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\PageNotFound\\PageNotFound.js":"9","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\locales\\index.js":"10","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\SignUp\\SignUp.js":"11","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\PasswordReset\\PasswordReset.js":"12","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\DialogDemo\\DialogDemo.js":"13","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\Home\\Home.js":"14","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\ToastDemo\\ToastDemo.js":"15","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\MyAccount\\MyAccount.js":"16","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\hiking\\SignIn.js":"17","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\FilterDemo\\index.js":"18","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\About\\index.js":"19","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\TabsDemo\\index.js":"20","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\ListPageDemo\\index.js":"21","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\locales\\de.js":"22","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\locales\\ru.js":"23","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\locales\\en.js":"24","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\hiking\\Home3.js":"25"},{"size":140,"mtime":1612420166618,"results":"26","hashOfConfig":"27"},{"size":355,"mtime":1612753947019,"results":"28","hashOfConfig":"27"},{"size":39,"mtime":1612420166612,"results":"29","hashOfConfig":"27"},{"size":869,"mtime":1612764376178,"results":"30","hashOfConfig":"27"},{"size":2080,"mtime":1612834800027,"results":"31","hashOfConfig":"27"},{"size":5816,"mtime":1612420166616,"results":"32","hashOfConfig":"27"},{"size":574,"mtime":1612764380060,"results":"33","hashOfConfig":"27"},{"size":527,"mtime":1612420166626,"results":"34","hashOfConfig":"27"},{"size":1554,"mtime":1612420166632,"results":"35","hashOfConfig":"27"},{"size":477,"mtime":1612420166614,"results":"36","hashOfConfig":"27"},{"size":5390,"mtime":1612420166635,"results":"37","hashOfConfig":"27"},{"size":3184,"mtime":1612420166633,"results":"38","hashOfConfig":"27"},{"size":1815,"mtime":1612420166620,"results":"39","hashOfConfig":"27"},{"size":544,"mtime":1612420166625,"results":"40","hashOfConfig":"27"},{"size":812,"mtime":1612420166637,"results":"41","hashOfConfig":"27"},{"size":5429,"mtime":1612420166631,"results":"42","hashOfConfig":"27"},{"size":5136,"mtime":1612774894721,"results":"43","hashOfConfig":"27"},{"size":4938,"mtime":1612420166624,"results":"44","hashOfConfig":"27"},{"size":1114,"mtime":1612420166619,"results":"45","hashOfConfig":"27"},{"size":1131,"mtime":1612420166636,"results":"46","hashOfConfig":"27"},{"size":2358,"mtime":1612420166630,"results":"47","hashOfConfig":"27"},{"size":1702,"mtime":1612420166612,"results":"48","hashOfConfig":"27"},{"size":2428,"mtime":1612420166615,"results":"49","hashOfConfig":"27"},{"size":1586,"mtime":1612420166613,"results":"50","hashOfConfig":"27"},{"size":31022,"mtime":1613639436753,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1o5jxdh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\index.js",[],["106","107"],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\App.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\index.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\config.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\routes.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\menuItems.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\themes.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\LandingPage\\LandingPage.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\PageNotFound\\PageNotFound.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\locales\\index.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\SignUp\\SignUp.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\PasswordReset\\PasswordReset.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\DialogDemo\\DialogDemo.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\Home\\Home.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\ToastDemo\\ToastDemo.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\MyAccount\\MyAccount.js",["108"],"import Avatar from '@material-ui/core/Avatar'\r\nimport Camera from '@material-ui/icons/CameraAlt'\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Page from 'material-ui-shell/lib/containers/Page/Page'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport React, { useState } from 'react'\r\nimport Save from '@material-ui/icons/Save'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport { useAuth } from 'base-shell/lib/providers/Auth'\r\nimport { useIntl } from 'react-intl'\r\nimport { useQuestions } from 'material-ui-shell/lib/providers/Dialogs/Question'\r\nimport ImgageUploadDialog from 'material-ui-shell/lib/containers/ImageUploadDialog'\r\n\r\nconst MyAccount = () => {\r\n  const intl = useIntl()\r\n  const { openDialog } = useQuestions()\r\n\r\n  const { auth, updateAuth, setAuth } = useAuth()\r\n  const {\r\n    photoURL: currentPhoroURL = '',\r\n    displayName: currentDisplayName = '',\r\n    email = '',\r\n  } = auth || {}\r\n  const [displayName, setDisplayName] = useState(currentDisplayName)\r\n  const [photoURL, setPhotoURL] = useState(currentPhoroURL)\r\n  const [isImageDialogOpen, setImageDialogOpen] = useState(false)\r\n\r\n  const hasChange =\r\n    displayName !== currentDisplayName || photoURL !== currentPhoroURL\r\n\r\n  const handleImageChange = (image) => {\r\n    setPhotoURL(image)\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    updateAuth({ ...auth, displayName, photoURL })\r\n  }\r\n\r\n  const openDeleteDialog = () => {\r\n    openDialog({\r\n      title: intl.formatMessage({\r\n        id: 'delete_account_dialog_title',\r\n        defaultMessage: 'Delete Account?',\r\n      }),\r\n      message: intl.formatMessage({\r\n        id: 'delete_account_dialog_message',\r\n        defaultMessage:\r\n          'This Account and all related data to it will be deleted permanently. Do you want to proceed with the deletion?',\r\n      }),\r\n      action: intl.formatMessage({\r\n        id: 'delete_account_dialog_action',\r\n        defaultMessage: 'DELETE ACCOUNT',\r\n      }),\r\n      handleAction: handleDelete,\r\n    })\r\n  }\r\n\r\n  const handleDelete = async (handleClose) => {\r\n    setAuth({ isAuthenticated: false })\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      pageTitle={intl.formatMessage({\r\n        id: 'my_account',\r\n        defaultMessage: 'My Account',\r\n      })}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100%',\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={3}\r\n          style={{\r\n            position: 'relative',\r\n            borderRadius: 18,\r\n            display: 'flex',\r\n            justifyContent: 'flex-start',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Fab\r\n            size=\"medium\"\r\n            style={{ position: 'absolute', bottom: 40, right: -16 }}\r\n            onClick={openDeleteDialog}\r\n            color=\"secondary\"\r\n            aria-label=\"delete\"\r\n          >\r\n            <Delete />\r\n          </Fab>\r\n\r\n          <Fab\r\n            onClick={() => setImageDialogOpen(true)}\r\n            style={{\r\n              position: 'absolute',\r\n              zIndex: 99,\r\n              top: 50,\r\n              marginRight: -60,\r\n            }}\r\n            color=\"primary\"\r\n            aria-label=\"save\"\r\n            size=\"small\"\r\n          >\r\n            <Camera />\r\n          </Fab>\r\n\r\n          {photoURL && (\r\n            <Avatar\r\n              style={{ width: 120, height: 120, marginTop: -40 }}\r\n              alt=\"User Picture\"\r\n              src={photoURL}\r\n            />\r\n          )}\r\n          {!photoURL && (\r\n            <Avatar style={{ width: 120, height: 120, marginTop: -40 }}\r\n              alt=\"User Picture\">\r\n              {displayName ? (\r\n                displayName[0].toUpperCase()\r\n              ) : (\r\n                  <PersonIcon />\r\n                )}\r\n            </Avatar>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              flexDirection: 'column',\r\n              marginTop: 18,\r\n              marginBottom: 18,\r\n            }}\r\n          >\r\n            <InputBase\r\n              value={displayName}\r\n              onChange={(e) => setDisplayName(e.target.value)}\r\n              inputProps={{\r\n                'aria-label': 'naked',\r\n                style: {\r\n                  fontSize: 26,\r\n                  fontWeight: 'bold',\r\n                  textAlign: 'center',\r\n                },\r\n              }}\r\n            />\r\n            <Typography variant=\"h6\">{email}</Typography>\r\n          </div>\r\n\r\n          <Zoom in={hasChange}>\r\n            <Fab\r\n              onClick={handleSave}\r\n              style={{ marginBottom: -20 }}\r\n              color=\"primary\"\r\n              aria-label=\"save\"\r\n            >\r\n              <Save />\r\n            </Fab>\r\n          </Zoom>\r\n        </Paper>\r\n        {\r\n          <ImgageUploadDialog\r\n            isOpen={isImageDialogOpen}\r\n            isOpen={isImageDialogOpen}\r\n            handleClose={() => setImageDialogOpen(false)}\r\n            handleCropSubmit={handleImageChange}\r\n          />\r\n        }\r\n\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default MyAccount\r\n","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\hiking\\SignIn.js",["109"],"import React from \"react\";\r\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AndroidIcon from '@material-ui/icons/Android';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport AppleIcon from '@material-ui/icons/Apple';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n  container: {\r\n    display:'flex',\r\n    flexDirection: 'column',  // flexDirection:'column' 使button strech 開來\r\n    \r\n  },\r\n  root:{\r\n    maxheight: '600',\r\n  }\r\n}));\r\n\r\nconst ColorButton1 = withStyles(() => ({\r\n  root: {\r\n    backgroundColor: \"#ffffff\",\r\n    letterSpacing: 1.6,\r\n    color: \"#000000\",    \r\n    // fullWidth: true,\r\n  },\r\n}))(Button);\r\n\r\nconst ColorButton2 = withStyles(() => ({\r\n  root: {\r\n    backgroundColor: \"#4267b2\",\r\n    letterSpacing: 2,\r\n    color: \"#ffffff\",\r\n  },\r\n}))(Button);\r\n\r\nconst ColorButton3 = withStyles(() => ({\r\n  root: {\r\n    backgroundColor: \"#000000\",\r\n    color: \"#ffffff\",\r\n    letterSpacing: 2,\r\n    \r\n  },\r\n}))(Button);\r\n\r\nconst testTheme = createMuiTheme({\r\n  palette: {\r\n    primary:{\r\n      main: '#b000ff',\r\n      contrastText: '#ffffff',\r\n    }\r\n  }\r\n});\r\n\r\nexport default function ImgMediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Page>      \r\n      <div className= {classes.container}>\r\n        <Card className={classes.root} style={{backgroundColor: \"white\"}}>\r\n          <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Climbing Image\"\r\n                height=\"600\"\r\n                image=\"/asset/images/sample.jpg\" \r\n                title=\"Sign-in background img\"\r\n              />\r\n            </CardActionArea>\r\n        </Card>\r\n        <div style={{margin: \"32px 0px 0px 0px\"}}></div>\r\n          <ColorButton1 variant = \"contained\" startIcon={<AndroidIcon style={{color: \"#00d04c\"}}/>}>\r\n            透過Google登入\r\n          </ColorButton1>\r\n          <ColorButton2 variant = \"contained\" startIcon={<FacebookIcon style={{color: \"#ffffff\"}}/>}>\r\n            透過Facebook登入\r\n          </ColorButton2>\r\n          <ColorButton3 variant = \"contained\" startIcon={<AppleIcon style={{color: \"#ffffff\"}}/>}>\r\n            透過Apple ID登入\r\n          </ColorButton3>\r\n          <ColorButton1 variant = \"contained\" startIcon={<MailOutlineIcon style={{color: \"#000000\"}}/>}>\r\n            透過Mail登入\r\n          </ColorButton1>\r\n          <ThemeProvider theme = {testTheme}>\r\n          <div style={{margin: \"32px 0px 0px 0px\"}}></div>\r\n          </ThemeProvider>\r\n          <Typography variant=\"body2\" component=\"p\" style={{color: \"black\", direction: \"column\", textAlign: \"center\"}}>\r\n            還不是會員嗎? <span>註冊新帳號</span>\r\n          </Typography>\r\n          <Button variant = \"outlined\" style={{color: \"#00d04c\", borderColor: \"#00d04c\"}}>\r\n            直接使用\r\n          </Button>\r\n      </div>\r\n      \r\n    </Page>\r\n      \r\n        /*  */\r\n\r\n\r\n      //   <CardActions>\r\n      //     <Grid container spacing={3} direction=\"column\" justifyContent = \"center\" alignItems = \"center\" >\r\n      //       <Grid item xs = {12}>\r\n      //         <ColorButton1 variant = \"contained\" startIcon={<AndroidIcon style={{color: \"#00d04c\"}}/>}>\r\n      //           透過Google登入\r\n      //         </ColorButton1>\r\n      //       </Grid>\r\n      //       <Grid item xs = {12}>\r\n      //         <ColorButton2  variant=\"contained\" startIcon={<FacebookIcon/>}>\r\n      //           透過Facebook登入\r\n      //         </ColorButton2>\r\n      //       </Grid>\r\n      //       <Grid item xs = {12}>\r\n      //         <ColorButton3 variant = \"contained\" color = \"secondary\" startIcon={<AppleIcon />} style={{letterSpacing: \"1.3px\"}} >\r\n      //           透過Apple ID登入\r\n      //         </ColorButton3>\r\n      //       </Grid>\r\n      //       <Grid item xs = {12}>\r\n      //         <ColorButton1 variant = \"contained\" startIcon={<MailOutlineIcon/>}>\r\n      //           透過Email登入\r\n      //         </ColorButton1>\r\n      //       </Grid>\r\n      //     </Grid>\r\n      //   </CardActions>\r\n      //     <CardContent >\r\n      //         <Typography variant=\"body2\" component=\"p\" style={{color: \"black\", direction: \"column\", alignItems: \"center\"}}>\r\n      //           還不是會員嗎?\r\n      //         </Typography>\r\n      //         <Typography variant=\"body2\" component=\"p\" style={{color: \"black\"}}>\r\n      //           註冊新帳號\r\n      //         </Typography>\r\n      //         <Button variant = \"outlined\" style={{color: \"#00d04c\", borderColor: \"#00d04c\"}}>\r\n      //           直接使用\r\n      //         </Button>\r\n      //     </CardContent>\r\n          \r\n      // </Card>\r\n  );\r\n}","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\FilterDemo\\index.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\About\\index.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\TabsDemo\\index.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\ListPageDemo\\index.js",["110","111"],"import React from 'react'\r\nimport { ListPage } from 'material-ui-shell/lib/containers/Page'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { useIntl } from 'react-intl'\r\n\r\nimport list from './data.json'\r\nimport { IconButton } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\n\r\nconst fields = [\r\n  {\r\n    name: 'name',\r\n    label: 'Name',\r\n  },\r\n  {\r\n    name: 'email',\r\n    label: 'E-Mail',\r\n  },\r\n  {\r\n    name: 'amount',\r\n    label: 'Amount',\r\n    type: 'number',\r\n  },\r\n  {\r\n    name: 'isActive',\r\n    label: 'Active',\r\n    type: 'bool',\r\n  },\r\n  {\r\n    name: 'registered',\r\n    label: 'Registered',\r\n    type: 'date',\r\n  },\r\n  {\r\n    name: 'registrationTime',\r\n    label: 'Registration time',\r\n    type: 'time',\r\n  },\r\n]\r\n\r\nconst Row = ({ index, style, data }) => {\r\n  const { name, amount = '', registered, email } = data\r\n\r\n  return (\r\n    <div key={`${name}_${index}`} style={style}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          primary={`${name} ${index}`}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n              >\r\n                {email}\r\n              </Typography>\r\n              <br />\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n              >\r\n                {`${amount} ${registered}`}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ListPageDemo = () => {\r\n  const intl = useIntl()\r\n\r\n  return (\r\n    <ListPage\r\n      name=\"list_demo\"\r\n      list={list}\r\n      fields={fields}\r\n      Row={Row}\r\n      listProps={{ itemSize: 91 }}\r\n      getPageProps={(list) => {\r\n        return {\r\n          pageTitle: intl.formatMessage(\r\n            {\r\n              id: 'list_page_demo',\r\n              defaultMessage: 'List Page demo with {count} rows',\r\n            },\r\n            { count: list.length }\r\n          ),\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\nexport default ListPageDemo\r\n","D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\locales\\de.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\locales\\ru.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\config\\locales\\en.js",[],"D:\\Trunk\\gohiking-web\\gohiking-web\\src\\pages\\hiking\\Home3.js",["112","113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":173,"column":13,"nodeType":"124","endLine":173,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":12,"column":8,"nodeType":"127","messageId":"128","endLine":12,"endColumn":12},{"ruleId":"125","severity":1,"message":"129","line":10,"column":10,"nodeType":"127","messageId":"128","endLine":10,"endColumn":20},{"ruleId":"125","severity":1,"message":"130","line":11,"column":10,"nodeType":"127","messageId":"128","endLine":11,"endColumn":13},{"ruleId":"125","severity":1,"message":"131","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":19},{"ruleId":"125","severity":1,"message":"132","line":16,"column":8,"nodeType":"127","messageId":"128","endLine":16,"endColumn":12},{"ruleId":"125","severity":1,"message":"133","line":258,"column":10,"nodeType":"127","messageId":"128","endLine":258,"endColumn":20},{"ruleId":"125","severity":1,"message":"134","line":282,"column":10,"nodeType":"127","messageId":"128","endLine":282,"endColumn":23},{"ruleId":"125","severity":1,"message":"135","line":312,"column":10,"nodeType":"127","messageId":"128","endLine":312,"endColumn":20},{"ruleId":"125","severity":1,"message":"136","line":339,"column":10,"nodeType":"127","messageId":"128","endLine":339,"endColumn":20},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Add' is defined but never used.","'CardActions' is defined but never used.","'Icon' is defined but never used.","'MappleIcon' is defined but never used.","'ChallengeIcon' is defined but never used.","'SpringIcon' is defined but never used.","'FamilyIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]